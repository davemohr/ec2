===============
EC2
===============

# Find instance when you know the Name of it
aws ec2 describe-instances \
--filters "Name=tag:Name,Values='Web Server'" \
--query 'Reservations[].Instances[].[State.Name,PublicIpAddress]'

# Latest AMI
LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'

===============
S3
===============

# Copy up a local file
aws s3 cp myfile s3://bucketName/

===============
CLOUDFORMATION
===============

# Create a stack (on failure do nothing)
aws cloudformation create-stack \
--stack-name thisStack \
--template-body file://template1.yaml \
--capabilities CAPABILITY_NAMED_IAM \
--on-failure DO_NOTHING \
--parameters ParameterKey=KeyName,ParameterValue=$key

# Monitor stack resource state
watch -n 5 -d \
aws cloudformation describe-stack-resources \
--stack-name thisStack \
--query 'StackResources[*].[ResourceType,ResourceStatus]' \
--output table

# Describe stack
aws cloudformation describe-stacks \
--stack-name thisStack \
--output table

# Find failed stack events
aws cloudformation describe-stack-events \
--stack-name thisStack \
--query "StackEvents[?ResourceStatus == 'CREATE_FAILED']"

# Delete stack
aws cloudformation delete-stack --stack-name thisStack

# Find the value of a CF template output (replace OutputName with actual)
aws cloudformation describe-stacks \
--stack-name myStack \
--query "Stacks[*].Outputs[?OutputKey == 'OutputName'].[OutputValue]" \
--output text







